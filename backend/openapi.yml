openapi: 3.0.0
info:
  title: Song Rating API
  description: API for the song ratings app.
  version: 1.0.0

servers:
  - url: "http://localhost:8080/api"
  - url: "http://localhost:3000"

paths:
  # /game

  /game/new:
    post:
      summary: Create a new game.
      description: Create a new game by supplying game info.
      operationId: createGame
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                game_name:
                  description: The name for this game.
                  type: string
                  minLength: 1
                  maxLength: 255
                game_description:
                  description: The description for this game (can be empty).
                  type: string
                  maxLength: 2500
                min_songs_per_playlist:
                  description:
                    The minimum number of songs allowed in any playlist. Must be <=
                    'max_songs_per_playlist' if 'max_songs_per_playlist' isn't null.
                  type: integer
                  minimum: 1
                  maximum: 100
                max_songs_per_playlist:
                  description:
                    The maximum number of songs allowed in any playlist. Must be >=
                    'min_songs_per_playlist' if 'min_songs_per_playlist' isn't null.
                  type: integer
                  minimum: 1
                  maximum: 100
                require_playlist_link:
                  description: Whether players are required to provide a playlist link.
                  type: boolean
              required:
                - game_name
                - require_playlist_link
      responses:
        "201":
          description: Successfully created game.
          content:
            application/json:
              schema:
                type: object
                properties:
                  admin_code:
                    description: The admin code for managing this game.
                    type: string
                    pattern: "^A[a-zA-Z0-9]{15}$"
                  invite_code:
                    description: The code players can use to join this game.
                    type: string
                    pattern: "^I[a-zA-Z0-9]{15}$"
        "400":
          description: Invalid input.
        "500":
          description: Internal server error.

  /game/peek/{invite_code}:
    get:
      summary: Get some information about a game.
      description: Retrieve some information about a game with an invite code.
      operationId: peekGameInfo
      parameters:
        - name: invite_code
          description: An invite code for the game to get info about.
          in: path
          required: true
          schema:
            type: string
            pattern: "^I[a-zA-Z0-9]{15}$"
      responses:
        "200":
          description: Successfully retrieved game information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  game_name:
                    description: The name of this game.
                    type: string
                    minLength: 1
                    maxLength: 255
                  game_description:
                    description: The description of this game.
                    type: string
                  min_songs_per_playlist:
                    description: The minimum number of songs allowed in any playlist.
                    type: integer
                    minimum: 1
                    maximum: 100
                  max_songs_per_playlist:
                    description: The maximum number of songs allowed in any playlist.
                    type: integer
                    minimum: 1
                    maximum: 100
                  require_playlist_link:
                    description: Whether players are required to provide a playlist link.
                    type: boolean
        "400":
          description: Invalid input.
        "404":
          description: Unknown 'invite_code' supplied.
        "500":
          description: Internal server error.

  /game/join/{invite_code}:
    post:
      summary: Create a new player by joining a game.
      description: Create a new player by joining a game with a game's invite code.
      operationId: joinGame
      parameters:
        - name: invite_code
          description: An invite code for the game to create a new player for.
          in: path
          required: true
          schema:
            type: string
            pattern: "^I[a-zA-Z0-9]{15}$"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                player_name:
                  description: The name for this player.
                  type: string
                  minLength: 1
                  maxLength: 255
                playlist_link:
                  description: The link for this player's playlist.
                  nullable: true
                  type: string
                  minLength: 1
                  maxLength: 255
                songs:
                  description:
                    A list of all songs in this player's playlist (must be within range of
                    'min_songs_per_playlist' and 'max_songs_per_playlist').
                  type: array
                  items:
                    description: A song.
                    type: object
                    properties:
                      title:
                        description: The name of this song.
                        type: string
                        minLength: 1
                        maxLength: 255
                      artist:
                        description: The artist of this song.
                        type: string
                        minLength: 1
                        maxLength: 255
                    required:
                      - title
                      - artist
                  minItems: 1
                  maxItems: 100
              required:
                - player_name
                - songs
      responses:
        "201":
          description: Game joined, player created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  player_code:
                    description: The player code for managing this player.
                    type: string
        "400":
          description: Invalid input.
        "404":
          description: Unknown 'invite_code' supplied.
        "409":
          description:
            Invalid number of songs supplied (must be within range of 'min_songs_per_playlist' and
            'max_songs_per_playlist'), name is already taken, or playlist link required but not
            provided.
        "410":
          description: The 'invite_code' is for a game that has already begun.
        "500":
          description: Internal server error.

  # /admin

  /admin/review/{admin_code}:
    get:
      summary: Get all information about a game.
      description: Retrieve information about a game with an admin code.
      operationId: adminReviewGame
      parameters:
        - name: admin_code
          description: An admin code for the game to get info about.
          in: path
          required: true
          schema:
            type: string
            pattern: "^A[a-zA-Z0-9]{15}$"
      responses:
        "200":
          description: Successfully retrieved game information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  game_name:
                    description: The name of this game.
                    type: string
                    minLength: 1
                    maxLength: 255
                  game_description:
                    description: The description of this game.
                    type: string
                  game_status:
                    description: The state of the game.
                    type: string
                    enum:
                      - waiting_for_players
                      - active
                      - finished
                  min_songs_per_playlist:
                    description: The minimum number of songs allowed in any playlist.
                    type: integer
                    minimum: 1
                    maximum: 100
                  max_songs_per_playlist:
                    description: The maximum number of songs allowed in any playlist.
                    type: integer
                    minimum: 1
                    maximum: 100
                  require_playlist_link:
                    description: Whether players are required to provide a playlist link.
                    type: boolean
                  invite_code:
                    description:
                      The code used to join this game or nothing if the game status is 'active' or
                      'finished'.
                    nullable: true
                    type: string
                    pattern: "^I[a-zA-Z0-9]{15}$"
                  players:
                    description: The players in this game.
                    type: array
                    items:
                      description: A player in this game.
                      type: object
                      properties:
                        player_code:
                          description: The player code for this player.
                          type: string
                          pattern: "^P[a-zA-Z0-9]{15}$"
                        player_name:
                          description: The name of this player.
                          type: string
                          minLength: 1
                          maxLength: 255
                        playlist_link:
                          description: A link to this player's playlist.
                          nullable: true
                          type: string
                          minLength: 1
                          maxLength: 255
                  songs:
                    description: A list of all songs, ordered by player id.
                    type: array
                    items:
                      description: A song.
                      type: object
                      properties:
                        song_id:
                          description: The id for this song.
                          type: integer
                          minimum: 1
                        player_name:
                          description: The name of the player this song belongs to.
                          type: string
                          minLength: 1
                          maxLength: 255
                        title:
                          description: The name of this song.
                          type: string
                          minLength: 1
                          maxLength: 255
                        artist:
                          description: The artist of this song.
                          type: string
                          minLength: 1
                          maxLength: 255
                  ratings:
                    description:
                      A list of all ratings, ordered by song owner player id and then rater player
                      id.
                    type: array
                    items:
                      description: A rating for a song.
                      type: object
                      properties:
                        song_id:
                          description: The id for this song.
                          type: integer
                          minimum: 1
                        player_name:
                          description: The name of the player this song belongs to.
                          type: string
                          minLength: 1
                          maxLength: 255
                        title:
                          description: The name of this song.
                          type: string
                          minLength: 1
                          maxLength: 255
                        artist:
                          description: The artist of this song.
                          type: string
                          minLength: 1
                          maxLength: 255
                        rater_player_name:
                          description: The name of the player who entered this rating.
                          type: string
                          minLength: 1
                          maxLength: 255
                        rating:
                          description: The rating given to this song.
                          type: number
                          format: float
                          minimum: 1.0
                          maximum: 10.0
        "400":
          description: Invalid input.
        "404":
          description: Unknown 'admin_code' supplied.
        "500":
          description: Internal server error.

  /admin/begin/{admin_code}:
    post:
      summary: Begin a game.
      description:
        Begin a game, opening up the ability for ratings to be given. No more players will be
        allowed to join.
      operationId: adminBeginGame
      parameters:
        - name: admin_code
          description: An admin code for the game to begin.
          in: path
          required: true
          schema:
            type: string
            pattern: "^A[a-zA-Z0-9]{15}$"
      responses:
        "201":
          description: Game begun successfully.
        "400":
          description: Invalid input.
        "404":
          description: Unknown 'admin_code' supplied.
        "409":
          description: Game begin failed because the game status is 'active' or 'finished'.
        "500":
          description: Internal server error.

  /admin/end/{admin_code}:
    post:
      summary: End a game.
      description:
        End a game, closing out all ratings (all players must have rated all songs that aren't
        theirs).
      operationId: adminEndGame
      parameters:
        - name: admin_code
          description: An admin code for the game to end.
          in: path
          required: true
          schema:
            type: string
            pattern: "^A[a-zA-Z0-9]{15}$"
      responses:
        "201":
          description: Game ended successfully.
        "400":
          description: Invalid input.
        "404":
          description: Unknown 'admin_code' supplied.
        "409":
          description:
            Game end failed because not all ratings were in or the game status is
            'waiting_for_players' or 'finished'.
        "500":
          description: Internal server error.

  /admin/remove_player/{admin_code}:
    post:
      summary: Remove a player from a game.
      description: Remove a player and all ratings associated with them from a game.
      operationId: adminRemovePlayer
      parameters:
        - name: admin_code
          description: An admin code for the game to remove the player from.
          in: path
          required: true
          schema:
            type: string
            pattern: "^A[a-zA-Z0-9]{15}$"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                player_code:
                  description: The player code for the player to be removed.
                  type: string
                  pattern: "^P[a-zA-Z0-9]{15}$"
              required:
                - player_code
      responses:
        "201":
          description: Player removed successfully.
        "400":
          description: Invalid input.
        "404":
          description: Unknown 'admin_code' supplied.
        "409":
          description: Unknown 'player_code' supplied.
        "500":
          description: Internal server error.

  # /player

  /player/review/{player_code}:
    get:
      summary: Get all information about a game for this player.
      description: Retrieve information about a game with a player code.
      operationId: playerReviewGame
      parameters:
        - name: player_code
          description: A player code for the player/game to get info about.
          in: path
          required: true
          schema:
            type: string
            pattern: "^P[a-zA-Z0-9]{15}$"
      responses:
        "200":
          description: Successfully retrieved game information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  game_name:
                    description: The name of this game.
                    type: string
                    minLength: 1
                    maxLength: 255
                  game_description:
                    description: The description of this game.
                    type: string
                  game_status:
                    description: The state of the game.
                    type: string
                    enum:
                      - waiting_for_players
                      - active
                      - finished
                  min_songs_per_playlist:
                    description: The minimum number of songs allowed in any playlist.
                    type: integer
                    minimum: 1
                    maximum: 100
                  max_songs_per_playlist:
                    description: The maximum number of songs allowed in any playlist.
                    type: integer
                    minimum: 1
                    maximum: 100
                  require_playlist_link:
                    description: Whether players are required to provide a playlist link.
                    type: boolean
                  players:
                    description: The players in this game.
                    type: array
                    items:
                      description: A player in this game.
                      type: object
                      properties:
                        player_name:
                          description: The name of this player.
                          type: string
                          minLength: 1
                          maxLength: 255
                        playlist_link:
                          description: A link to this player's playlist.
                          nullable: true
                          type: string
                          minLength: 1
                          maxLength: 255
                  songs:
                    description: A list of all songs and their rating, ordered by player id.
                    type: array
                    items:
                      description: A song.
                      type: object
                      properties:
                        song_id:
                          description: The id for this song.
                          type: integer
                          minimum: 1
                        player_name:
                          description: The name of the player this song belongs to.
                          type: string
                          minLength: 1
                          maxLength: 255
                        title:
                          description: The name of this song.
                          type: string
                          minLength: 1
                          maxLength: 255
                        artist:
                          description: The artist of this song.
                          type: string
                          minLength: 1
                          maxLength: 255
                        rating:
                          description: The rating given to this song by this player.
                          type: number
                          format: float
                          minimum: 1.0
                          maximum: 10.0
        "400":
          description: Invalid input.
        "404":
          description: Unknown 'player_code' supplied.
        "500":
          description: Internal server error.

  /player/add_song/{player_code}:
    post:
      summary: Add a song to a player's playlist.
      description: Add a song to a player's playlist given the player's player code.
      operationId: playerAddSong
      parameters:
        - name: player_code
          description: A player code for the player/game to add a song for.
          in: path
          required: true
          schema:
            type: string
            pattern: "^P[a-zA-Z0-9]{15}$"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                song_to_add:
                  description: A song.
                  type: object
                  properties:
                    title:
                      description: The name of this song.
                      type: string
                      minLength: 1
                      maxLength: 255
                    artist:
                      description: The artist of this song.
                      type: string
                      minLength: 1
                      maxLength: 255
                  required:
                    - title
                    - artist
              required:
                - song_to_add
      responses:
        "201":
          description: Song added successfully.
        "400":
          description: Invalid input.
        "404":
          description: Unknown 'player_code' supplied.
        "409":
          description:
            Operation results in an invalid number of songs (must be within range of
            'min_songs_per_playlist' and 'max_songs_per_playlist') or the game status is not
            'waiting_for_players'.
        "500":
          description: Internal server error.

  /player/remove_song/{player_code}:
    post:
      summary: Remove a song from a player's playlist.
      description: Remove a song from a player's playlist given the player's player code.
      operationId: playerRemoveSong
      parameters:
        - name: player_code
          description: A player code for the player/game to remove a song for.
          in: path
          required: true
          schema:
            type: string
            pattern: "^P[a-zA-Z0-9]{15}$"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                song_id_to_remove:
                  description: The id of the song to remove.
                  type: integer
                  minimum: 1
              required:
                - song_id_to_remove
      responses:
        "201":
          description: Song removed successfully.
        "400":
          description: Invalid input.
        "404":
          description: Unknown 'player_code' supplied.
        "409":
          description:
            Operation results in an invalid number of songs (must be within range of
            'min_songs_per_playlist' and 'max_songs_per_playlist'), the game status is not
            'waiting_for_players', or the provided 'song_id_to_remove' is invalid.
        "500":
          description: Internal server error.

  /player/replace_song/{player_code}:
    post:
      summary: Replace a song from a player's playlist with another one.
      description:
        Replace a song from a player's playlist with another one given the player's
        player code.
      operationId: playerReplaceSong
      parameters:
        - name: player_code
          description: A player code for the player/game to replace a song for.
          in: path
          required: true
          schema:
            type: string
            pattern: "^P[a-zA-Z0-9]{15}$"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                song_id_to_remove:
                  description: The id of the song to remove.
                  type: integer
                  minimum: 1
                song_to_add:
                  description: A song.
                  type: object
                  properties:
                    title:
                      description: The name of this song.
                      type: string
                      minLength: 1
                      maxLength: 255
                    artist:
                      description: The artist of this song.
                      type: string
                      minLength: 1
                      maxLength: 255
                  required:
                    - title
                    - artist
              required:
                - song_id_to_remove
                - song_to_add
      responses:
        "201":
          description: Song replaced successfully.
        "400":
          description: Invalid input.
        "404":
          description: Unknown 'player_code' supplied.
        "409":
          description:
            The game status is not 'waiting_for_players' or the provided
            'song_id_to_remove' is invalid.
        "500":
          description: Internal server error.

  /player/change_playlist_link/{player_code}:
    post:
      summary: Change the playlist link for a player's playlist.
      description: Change the playlist link for a player's playlist given the player's player code.
      operationId: playerChangePlaylistLink
      parameters:
        - name: player_code
          description: A player code for the player/game to change a playlist link for.
          in: path
          required: true
          schema:
            type: string
            pattern: "^P[a-zA-Z0-9]{15}$"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                playlist_link:
                  description: A link to a new playlist or null to remove the playlist link.
                  nullable: true
                  type: string
                  minLength: 1
                  maxLength: 255
              required:
                - playlist_link
      responses:
        "201":
          description: Playlist link changed successfully.
        "400":
          description: Invalid input.
        "404":
          description: Unknown 'player_code' supplied.
        "409":
          description: Playlist link required but not provided or the game status is not 'waiting_for_players'.
        "500":
          description: Internal server error.

  /player/rate_song/{player_code}:
    post:
      summary: Rate a song for a player.
      description: Rate a song for a player given the player's player code.
      operationId: playerRateSong
      parameters:
        - name: player_code
          description: A player code for the player/game to add a song for.
          in: path
          required: true
          schema:
            type: string
            pattern: "^P[a-zA-Z0-9]{15}$"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                song_id:
                  description: The id of the song to rate.
                  type: integer
                  minimum: 1
                rating:
                  description: The rating given to this song.
                  type: number
                  format: float
                  minimum: 1.0
                  maximum: 10.0
              required:
                - song_id
                - rating
      responses:
        "201":
          description: Song rated successfully.
        "400":
          description: Invalid input.
        "404":
          description: Unknown 'player_code' supplied.
        "409":
          description:
            Invalid 'song_id' ('song_id' must be for a valid song tied to this game and must not be
            owned by the rating plater) or the game status is not 'active'.
        "500":
          description: Internal server error.
